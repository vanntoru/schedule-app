/* High-contrast focus ring */
:where(:focus-visible) {
  outline: 2px solid #f90;
  outline-offset: 2px;
}

@media (prefers-contrast: more) {
  :where(:focus-visible) {
    outline-color: CanvasText;
  }
}

/* ──────────────────────────────────────────────────────────
   色覚バリアフリー対応 ― 斜ストライプオーバーレイ
   ----------------------------------------------------------
   仕様書 §8.1「色覚対応: 塗り＋ストライプパターン」に基づき、
   予定ブロック（タスクリストカード／グリッドセル）が
   単色表示だけでなく模様でも識別できるようにする。

   既存 JS で task / event に付与しているクラス
     ・.task-card         … サイドパネル内カード
     ・.grid-slot--busy   … グリッド内に配置済みセル
   の両方へ同じオーバーレイをかける。
   （クラス名が異なる場合は該当クラスを追記するだけで OK）

   ポイント
   - mix‑blend‑mode を overlay にすることで
     下地の Tailwind 背景色を維持しつつ模様だけ上書き。
   - 透明度 0.35 程度なら印刷 / ダークモードでも視認性を確保。
   - position:relative でレイアウト崩れを防ぐ。
   ────────────────────────────────────────────────────────── */

.task-card,
.grid-slot--busy {
  position: relative;           /* 疑似要素の絶対配置用 */
  isolation: isolate;           /* Safari 対応で z-index 独立 */
}

/* 疑似要素でストライプを重ねる */
.task-card::after,
.grid-slot--busy::after {
  content: '';
  position: absolute;
  inset: 0;                     /* Four‑way full overlay */
  pointer-events: none;         /* マウス操作に影響させない */

  /* 4 px 幅・45° 斜めストライプ */
  background-image: repeating-linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.35) 0,
      rgba(255, 255, 255, 0.35) 4px,
      transparent 4px,
      transparent 8px
  );
  background-size: 8px 8px;     /* Hi‑DPI でも粗さを抑える */
  mix-blend-mode: overlay;      /* 下地色とブレンド */
  z-index: 1;                   /* 本体より前面、ドラッグ時は JS 側で上げる */
}

/* 色覚バリアフリー ― Reduced contrast 専用オーバーライド  */
@media (prefers-contrast: less) {
  .task-card::after,
  .grid-slot--busy::after {
    /* ブレンドをやめて必ず描く */
    mix-blend-mode: normal;

    /* 濃度を上げ、背景色に依存しない暗色ストライプ */
    background-image: repeating-linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.22) 0 4px,
      transparent          4px 8px
    );
  }
}

/* Windows High‑Contrast (forced‑colors) も念のため */
@media (forced-colors: active) {
  .task-card::after,
  .grid-slot--busy::after {
    background-image: repeating-linear-gradient(
      135deg,
      CanvasText 0 4px,
      transparent 4px 8px
    );
    mix-blend-mode: normal;
  }
}

/* === Reduced-contrast 用に濃いストライプだけを切替で適用 === */
.busy-strong::after {
  /* 通常モード用ストライプは .task-card::after / .grid-slot--busy::after が既に定義済み */
  background-image: repeating-linear-gradient(
    135deg,
    rgba(0, 0, 0, .24) 0 4px,   /* 黒 24 %：Reduced contrast 時でも消えない */
    transparent        4px 8px
  );
  mix-blend-mode: normal;       /* 背景色に影響されず確実に表示 */
}

/* ----------------------------------------------------------
   サイドパネルとタスクカードの基本スタイル
   最低限の見た目を整えるため Tailwind ユーティリティを
   custom layer としてまとめておく。
   ---------------------------------------------------------- */

@layer components {
  /* サイドパネル幅や余白など */
  #task-pane {
    @apply w-60 shrink-0 border-r border-gray-300 pr-4 space-y-2 overflow-y-auto;
  }

  /* タスクカードの背景色・角丸・影付け */
  .task-card {
    @apply p-2 bg-white rounded shadow border cursor-grab select-none
           hover:bg-gray-50 focus-visible:outline-none
           focus-visible:ring-2 focus-visible:ring-blue-400;
  }
}

/*
   ----------------------------------------------------------
   All-day timeline chip styles
   ---------------------------------------------------------- */

@layer components {
  /* 横並びのチップを収めるコンテナ */
  #all-day-timeline {
    @apply flex flex-nowrap gap-2 overflow-x-auto py-2 px-4 scrollbar-thin list-none;
  }

  #all-day-timeline li {
    @apply inline;
  }

  /* 個々のチップボタン */
  #all-day-timeline .chip-btn {
    @apply inline-flex items-center rounded-full bg-blue-100 text-blue-800
           text-xs font-medium px-3 py-1 whitespace-nowrap;
  }
}

